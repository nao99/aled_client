// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/led_tape.proto

package org.ndbs.aled.client.api;

public final class LedTapeOuterClass {
  private LedTapeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LedTapeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LedTape)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    java.util.List<LedTape.Diode>
        getDiodesList();
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    LedTape.Diode getDiodes(int index);
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    int getDiodesCount();
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    java.util.List<? extends LedTape.DiodeOrBuilder>
        getDiodesOrBuilderList();
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    LedTape.DiodeOrBuilder getDiodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code LedTape}
   */
  public static final class LedTape extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LedTape)
      LedTapeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LedTape.newBuilder() to construct.
    private LedTape(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LedTape() {
      diodes_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new LedTape();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LedTape(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                diodes_ = new java.util.ArrayList<Diode>();
                mutable_bitField0_ |= 0x00000001;
              }
              diodes_.add(
                  input.readMessage(Diode.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          diodes_ = java.util.Collections.unmodifiableList(diodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LedTapeOuterClass.internal_static_LedTape_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LedTapeOuterClass.internal_static_LedTape_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              LedTape.class, Builder.class);
    }

    public interface DiodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LedTape.Diode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>int32 hue = 2;</code>
       * @return The hue.
       */
      int getHue();

      /**
       * <code>int32 saturation = 3;</code>
       * @return The saturation.
       */
      int getSaturation();
    }
    /**
     * Protobuf type {@code LedTape.Diode}
     */
    public static final class Diode extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:LedTape.Diode)
        DiodeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Diode.newBuilder() to construct.
      private Diode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Diode() {
      }

      @Override
      @SuppressWarnings({"unused"})
      protected Object newInstance(
          UnusedPrivateParameter unused) {
        return new Diode();
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Diode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                id_ = input.readInt32();
                break;
              }
              case 16: {

                hue_ = input.readInt32();
                break;
              }
              case 24: {

                saturation_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LedTapeOuterClass.internal_static_LedTape_Diode_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LedTapeOuterClass.internal_static_LedTape_Diode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diode.class, Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }

      public static final int HUE_FIELD_NUMBER = 2;
      private int hue_;
      /**
       * <code>int32 hue = 2;</code>
       * @return The hue.
       */
      @Override
      public int getHue() {
        return hue_;
      }

      public static final int SATURATION_FIELD_NUMBER = 3;
      private int saturation_;
      /**
       * <code>int32 saturation = 3;</code>
       * @return The saturation.
       */
      @Override
      public int getSaturation() {
        return saturation_;
      }

      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != 0) {
          output.writeInt32(1, id_);
        }
        if (hue_ != 0) {
          output.writeInt32(2, hue_);
        }
        if (saturation_ != 0) {
          output.writeInt32(3, saturation_);
        }
        unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (hue_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, hue_);
        }
        if (saturation_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, saturation_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Diode)) {
          return super.equals(obj);
        }
        Diode other = (Diode) obj;

        if (getId()
            != other.getId()) return false;
        if (getHue()
            != other.getHue()) return false;
        if (getSaturation()
            != other.getSaturation()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
        hash = (37 * hash) + HUE_FIELD_NUMBER;
        hash = (53 * hash) + getHue();
        hash = (37 * hash) + SATURATION_FIELD_NUMBER;
        hash = (53 * hash) + getSaturation();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Diode parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Diode parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Diode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Diode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Diode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Diode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Diode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Diode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Diode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Diode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Diode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Diode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Diode prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code LedTape.Diode}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LedTape.Diode)
          DiodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return LedTapeOuterClass.internal_static_LedTape_Diode_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return LedTapeOuterClass.internal_static_LedTape_Diode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Diode.class, Builder.class);
        }

        // Construct using LedTapeOuterClass.LedTape.Diode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @Override
        public Builder clear() {
          super.clear();
          id_ = 0;

          hue_ = 0;

          saturation_ = 0;

          return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return LedTapeOuterClass.internal_static_LedTape_Diode_descriptor;
        }

        @Override
        public Diode getDefaultInstanceForType() {
          return Diode.getDefaultInstance();
        }

        @Override
        public Diode build() {
          Diode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @Override
        public Diode buildPartial() {
          Diode result = new Diode(this);
          result.id_ = id_;
          result.hue_ = hue_;
          result.saturation_ = saturation_;
          onBuilt();
          return result;
        }

        @Override
        public Builder clone() {
          return super.clone();
        }
        @Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.setField(field, value);
        }
        @Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.addRepeatedField(field, value);
        }
        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Diode) {
            return mergeFrom((Diode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Diode other) {
          if (other == Diode.getDefaultInstance()) return this;
          if (other.getId() != 0) {
            setId(other.getId());
          }
          if (other.getHue() != 0) {
            setHue(other.getHue());
          }
          if (other.getSaturation() != 0) {
            setSaturation(other.getSaturation());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @Override
        public final boolean isInitialized() {
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Diode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Diode) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int id_ ;
        /**
         * <code>int32 id = 1;</code>
         * @return The id.
         */
        @Override
        public int getId() {
          return id_;
        }
        /**
         * <code>int32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {
          
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          
          id_ = 0;
          onChanged();
          return this;
        }

        private int hue_ ;
        /**
         * <code>int32 hue = 2;</code>
         * @return The hue.
         */
        @Override
        public int getHue() {
          return hue_;
        }
        /**
         * <code>int32 hue = 2;</code>
         * @param value The hue to set.
         * @return This builder for chaining.
         */
        public Builder setHue(int value) {
          
          hue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 hue = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHue() {
          
          hue_ = 0;
          onChanged();
          return this;
        }

        private int saturation_ ;
        /**
         * <code>int32 saturation = 3;</code>
         * @return The saturation.
         */
        @Override
        public int getSaturation() {
          return saturation_;
        }
        /**
         * <code>int32 saturation = 3;</code>
         * @param value The saturation to set.
         * @return This builder for chaining.
         */
        public Builder setSaturation(int value) {
          
          saturation_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 saturation = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSaturation() {
          
          saturation_ = 0;
          onChanged();
          return this;
        }
        @Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:LedTape.Diode)
      }

      // @@protoc_insertion_point(class_scope:LedTape.Diode)
      private static final Diode DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Diode();
      }

      public static Diode getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Diode>
          PARSER = new com.google.protobuf.AbstractParser<Diode>() {
        @Override
        public Diode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Diode(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Diode> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<Diode> getParserForType() {
        return PARSER;
      }

      @Override
      public Diode getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DIODES_FIELD_NUMBER = 1;
    private java.util.List<Diode> diodes_;
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    @Override
    public java.util.List<Diode> getDiodesList() {
      return diodes_;
    }
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    @Override
    public java.util.List<? extends DiodeOrBuilder>
        getDiodesOrBuilderList() {
      return diodes_;
    }
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    @Override
    public int getDiodesCount() {
      return diodes_.size();
    }
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    @Override
    public Diode getDiodes(int index) {
      return diodes_.get(index);
    }
    /**
     * <code>repeated .LedTape.Diode diodes = 1;</code>
     */
    @Override
    public DiodeOrBuilder getDiodesOrBuilder(
        int index) {
      return diodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < diodes_.size(); i++) {
        output.writeMessage(1, diodes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < diodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, diodes_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof LedTape)) {
        return super.equals(obj);
      }
      LedTape other = (LedTape) obj;

      if (!getDiodesList()
          .equals(other.getDiodesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDiodesCount() > 0) {
        hash = (37 * hash) + DIODES_FIELD_NUMBER;
        hash = (53 * hash) + getDiodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static LedTape parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LedTape parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LedTape parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LedTape parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LedTape parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LedTape parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LedTape parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LedTape parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static LedTape parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static LedTape parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static LedTape parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static LedTape parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(LedTape prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LedTape}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LedTape)
        LedTapeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LedTapeOuterClass.internal_static_LedTape_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LedTapeOuterClass.internal_static_LedTape_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LedTape.class, Builder.class);
      }

      // Construct using LedTapeOuterClass.LedTape.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDiodesFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (diodesBuilder_ == null) {
          diodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          diodesBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LedTapeOuterClass.internal_static_LedTape_descriptor;
      }

      @Override
      public LedTape getDefaultInstanceForType() {
        return LedTape.getDefaultInstance();
      }

      @Override
      public LedTape build() {
        LedTape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public LedTape buildPartial() {
        LedTape result = new LedTape(this);
        int from_bitField0_ = bitField0_;
        if (diodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            diodes_ = java.util.Collections.unmodifiableList(diodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.diodes_ = diodes_;
        } else {
          result.diodes_ = diodesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof LedTape) {
          return mergeFrom((LedTape)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(LedTape other) {
        if (other == LedTape.getDefaultInstance()) return this;
        if (diodesBuilder_ == null) {
          if (!other.diodes_.isEmpty()) {
            if (diodes_.isEmpty()) {
              diodes_ = other.diodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDiodesIsMutable();
              diodes_.addAll(other.diodes_);
            }
            onChanged();
          }
        } else {
          if (!other.diodes_.isEmpty()) {
            if (diodesBuilder_.isEmpty()) {
              diodesBuilder_.dispose();
              diodesBuilder_ = null;
              diodes_ = other.diodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              diodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDiodesFieldBuilder() : null;
            } else {
              diodesBuilder_.addAllMessages(other.diodes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        LedTape parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (LedTape) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Diode> diodes_ =
        java.util.Collections.emptyList();
      private void ensureDiodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          diodes_ = new java.util.ArrayList<Diode>(diodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Diode, Diode.Builder, DiodeOrBuilder> diodesBuilder_;

      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public java.util.List<Diode> getDiodesList() {
        if (diodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(diodes_);
        } else {
          return diodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public int getDiodesCount() {
        if (diodesBuilder_ == null) {
          return diodes_.size();
        } else {
          return diodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Diode getDiodes(int index) {
        if (diodesBuilder_ == null) {
          return diodes_.get(index);
        } else {
          return diodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder setDiodes(
          int index, Diode value) {
        if (diodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiodesIsMutable();
          diodes_.set(index, value);
          onChanged();
        } else {
          diodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder setDiodes(
          int index, Diode.Builder builderForValue) {
        if (diodesBuilder_ == null) {
          ensureDiodesIsMutable();
          diodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          diodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder addDiodes(Diode value) {
        if (diodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiodesIsMutable();
          diodes_.add(value);
          onChanged();
        } else {
          diodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder addDiodes(
          int index, Diode value) {
        if (diodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiodesIsMutable();
          diodes_.add(index, value);
          onChanged();
        } else {
          diodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder addDiodes(
          Diode.Builder builderForValue) {
        if (diodesBuilder_ == null) {
          ensureDiodesIsMutable();
          diodes_.add(builderForValue.build());
          onChanged();
        } else {
          diodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder addDiodes(
          int index, Diode.Builder builderForValue) {
        if (diodesBuilder_ == null) {
          ensureDiodesIsMutable();
          diodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          diodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder addAllDiodes(
          Iterable<? extends Diode> values) {
        if (diodesBuilder_ == null) {
          ensureDiodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, diodes_);
          onChanged();
        } else {
          diodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder clearDiodes() {
        if (diodesBuilder_ == null) {
          diodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          diodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Builder removeDiodes(int index) {
        if (diodesBuilder_ == null) {
          ensureDiodesIsMutable();
          diodes_.remove(index);
          onChanged();
        } else {
          diodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Diode.Builder getDiodesBuilder(
          int index) {
        return getDiodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public DiodeOrBuilder getDiodesOrBuilder(
          int index) {
        if (diodesBuilder_ == null) {
          return diodes_.get(index);  } else {
          return diodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public java.util.List<? extends DiodeOrBuilder>
           getDiodesOrBuilderList() {
        if (diodesBuilder_ != null) {
          return diodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(diodes_);
        }
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Diode.Builder addDiodesBuilder() {
        return getDiodesFieldBuilder().addBuilder(
            Diode.getDefaultInstance());
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public Diode.Builder addDiodesBuilder(
          int index) {
        return getDiodesFieldBuilder().addBuilder(
            index, Diode.getDefaultInstance());
      }
      /**
       * <code>repeated .LedTape.Diode diodes = 1;</code>
       */
      public java.util.List<Diode.Builder>
           getDiodesBuilderList() {
        return getDiodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Diode, Diode.Builder, DiodeOrBuilder>
          getDiodesFieldBuilder() {
        if (diodesBuilder_ == null) {
          diodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Diode, Diode.Builder, DiodeOrBuilder>(
                  diodes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          diodes_ = null;
        }
        return diodesBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LedTape)
    }

    // @@protoc_insertion_point(class_scope:LedTape)
    private static final LedTape DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LedTape();
    }

    public static LedTape getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LedTape>
        PARSER = new com.google.protobuf.AbstractParser<LedTape>() {
      @Override
      public LedTape parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LedTape(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LedTape> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<LedTape> getParserForType() {
      return PARSER;
    }

    @Override
    public LedTape getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LedTape_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LedTape_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LedTape_Diode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LedTape_Diode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\'src/main/resources/led_tape.prot" +
      "o\"_\n\007LedTape\022\036\n\006diodes\030\001 \003(\0132\016.LedTape.D" +
      "iode\0324\n\005Diode\022\n\n\002id\030\001 \001(\005\022\013\n\003hue\030\002 \001(\005\022\022" +
      "\n\nsaturation\030\003 \001(\005b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_LedTape_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_LedTape_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LedTape_descriptor,
        new String[] { "Diodes", });
    internal_static_LedTape_Diode_descriptor =
      internal_static_LedTape_descriptor.getNestedTypes().get(0);
    internal_static_LedTape_Diode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LedTape_Diode_descriptor,
        new String[] { "Id", "Hue", "Saturation", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
